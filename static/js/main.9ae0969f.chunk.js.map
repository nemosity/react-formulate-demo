{"version":3,"sources":["logo.svg","constants/actionTypes.js","actions/formActions.js","components/MaterialUI/Progress.js","components/MaterialUI/Button.js","components/MaterialUI/Datepicker.js","components/MaterialUI/Input.js","components/MaterialUI/Radio.js","components/MaterialUI/index.js","components/MaterialUI/Select.js","components/MaterialUI/Textarea.js","components/Dropdown/index.js","utils/componentMapMaterialUI.js","containers/ReactFormulateForm.js","actions/schemaActions.js","App.js","serviceWorker.js","utils/stateSelectors.js","sagas/form.js","sagas/schema.js","sagas/index.js","reducers/formReducer.js","reducers/schemaReducer.js","reducers/index.js","store/configureStore.js","index.js"],"names":["module","exports","ERROR","LOAD","UPDATE","CLEAN","CLEAR","MOVE_NEXT","MOVE_BACK","SUBMIT","INPUT","STEP","VALIDATE","VALIDATE_ELEMENT","VALIDATE_ELEMENT_FAIL","VALIDATE_ELEMENT_SUCCESS","VALIDATE_FAIL","clearForm","createAction","ActionTypes","updateForm","moveBack","submit","validateForm","validateElement","useStyles","makeStyles","theme","root","width","backButton","marginRight","spacing","instructions","marginTop","marginBottom","HorizontalLabelPositionBelowStepper","steps","activeStep","classes","className","Stepper","alternativeLabel","map","label","Step","key","StepLabel","Button","props","variant","color","children","Datepicker","utils","DateFnsUtils","margin","value","now","Date","toISOString","onChange","setDefaultDate","date","Input","FormControl","error","fullWidth","FormLabel","component","TextField","event","target","FormHelperText","Radio","RadioGroup","aria-label","name","id","values","index","FormControlLabel","control","Select","input","labelWidth","MenuItem","Textarea","multiline","rows","Dropdown","src","useState","setValues","disabled","setDisabled","useEffect","fetch","then","response","json","data","setTimeout","catch","err","console","log","placeholder","Repeater","materailComponentMap","components","ReactFormulateForm","renderAlert","icon","type","valid","inline","this","schema","config","paginated","Progress","page","pageId","step","transitionName","transitionEnterTimeout","transitionLeaveTimeout","i","content","form","onUpdate","onUpdateForm","errors","onValidateElement","widgets","i18n","params","Object","keys","replace","tracking","onClick","onMoveBack","onValidateForm","primary","length","onSubmit","Component","connect","parsedSchema","dispatch","path","updateSchema","MaterialUI","App","onSchemaUpdate","JSON","stringify","sample1","parse","e","role","style","aria-valuenow","aria-valuemin","aria-valuemax","href","logo","height","alt","renderProgressBar","sample2","readOnly","onClearForm","rawSchema","Boolean","window","location","hostname","match","getFormInput","state","getParsedSchema","doValidateForm","doValidateElement","doMoveNext","moveNext","action","select","Number","isInteger","payload","validate","cleanInput","put","takeLatest","joinPath","nextStep","shouldSkipStep","showIf","_get","doLoadSchema","loadSchema","rootSaga","all","fork","initialState","visitedSteps","combineReducers","_setFp","slice","_mergeFp","_unsetFp","sagaMiddleware","createSagaMiddleware","store","middlewares","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","run","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9ae0969f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default {\n  SCHEMA: {\n    ERROR: 'SCHEMA.ERROR',\n    LOAD: 'SCHEMA.LOAD',\n    UPDATE: 'SCHEMA.UPDATE',\n  },\n  FORM: {\n    CLEAN: 'FORM.CLEAN',\n    CLEAR: 'FORM.CLEAR',\n    MOVE_NEXT: 'FORM.MOVE_NEXT',\n    MOVE_BACK: 'FORM.MOVE_BACK',\n    SUBMIT: 'FORM.SUBMIT',\n    UPDATE: {\n      INPUT: 'FORM.UPDATE.INPUT',\n      STEP: 'FORM.UPDATE.STEP'\n    },\n    VALIDATE: 'FORM.VALIDATE',\n    VALIDATE_ELEMENT: 'FORM.VALIDATE_ELEMENT',\n    VALIDATE_ELEMENT_FAIL: 'FORM.VALIDATE_ELEMENT_FAIL',\n    VALIDATE_ELEMENT_SUCCESS: 'FORM.VALIDATE_ELEMENT_SUCCESS',\n    VALIDATE_FAIL: 'FORM.VALIDATE_FAIL'\n  }\n}","import {createAction} from 'redux-actions';\nimport ActionTypes from '../constants/actionTypes';\n\nexport const clearForm = createAction(ActionTypes.FORM.CLEAR);\nexport const updateForm = createAction(ActionTypes.FORM.UPDATE.INPUT);\nexport const updateStep = createAction(ActionTypes.FORM.UPDATE.STEP);\nexport const moveBack = createAction(ActionTypes.FORM.MOVE_BACK)\nexport const submit = createAction(ActionTypes.FORM.SUBMIT);\nexport const validateForm = createAction(ActionTypes.FORM.VALIDATE);\nexport const validateElement = createAction(ActionTypes.FORM.VALIDATE_ELEMENT);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst HorizontalLabelPositionBelowStepper = ({steps, activeStep}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n}\n\nexport default HorizontalLabelPositionBelowStepper;","import React from 'react';\r\n\r\nimport MUIButton from '@material-ui/core/Button';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <span className=\"u-mar--2 u-align-items--center u-justify-content--center\">\r\n      <MUIButton variant=\"contained\" color=\"secondary\" {...props}>\r\n        {props.label || props.children}\r\n      </MUIButton>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Button;","import 'date-fns';\r\nimport React from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst Datepicker = props => {\r\n\r\n  const handleDateChange = date => {\r\n    props.onChange(date);\r\n  }\r\n\r\n  const setDefaultDate = () => {\r\n    const now = new Date().toISOString();\r\n    props.onChange(now);\r\n    return now;\r\n  }\r\n\r\n  return (\r\n    <div className=\"formElement\">\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            label={props.label}\r\n            value={props.value || setDefaultDate()}\r\n            onChange={handleDateChange}\r\n          />\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Datepicker;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst Input = props => {\r\n  return (\r\n    <div className=\"formElement\">\r\n      <FormControl error={!!props.error} fullWidth>\r\n        <FormLabel component=\"legend\">{props.label}</FormLabel>\r\n        <TextField\r\n          fullWidth\r\n          {...props}\r\n          label={null}\r\n          onChange={event => props.onChange(event.target.value)}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n        {props.error && <FormHelperText>{props.error}</FormHelperText>}\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nimport MUIRadio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst Radio = props => {\r\n  return (\r\n    <div className=\"formElement\">\r\n      <FormControl error={!!props.error} component=\"fieldset\">\r\n        <FormLabel component=\"legend\">{props.label}</FormLabel>\r\n        <RadioGroup\r\n          {...props}\r\n          aria-label={props.label}\r\n          name={props.id}\r\n          onChange={event => props.onChange(event.target.value)}\r\n        >\r\n          {props.values.map((value, index) => {\r\n            return (\r\n              <FormControlLabel\r\n                key={index}\r\n                value={value.value}\r\n                control={<MUIRadio />}\r\n                label={value.label}\r\n              />\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n        {props.error && <FormHelperText>{props.error}</FormHelperText>}\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Radio;","import Button from './Button';\r\nimport Datepicker from './Datepicker';\r\nimport Input from './Input';\r\nimport Radio from './Radio';\r\nimport Select from './Select';\r\nimport Textarea from './Textarea';\r\n\r\nexport default {\r\n  Button,\r\n  Datepicker,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Textarea\r\n}","import React from 'react';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MUIInput from '@material-ui/core/Input';\r\nimport MUISelect from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst Select = props => {\r\n  return (\r\n    <div className=\"formElement\">\r\n      <FormControl error={!!props.error} className=\"selectComponent\" fullWidth>\r\n        <FormLabel component=\"legend\">{props.label}</FormLabel>\r\n        <MUISelect\r\n          fullWidth\r\n          {...props}\r\n          label={null}\r\n          onChange={event => props.onChange(event.target.value)}\r\n          input={<MUIInput name={props.name} id={props.id} labelWidth={120} />}\r\n        >\r\n          {props.values.map((value, index) => {\r\n            return (\r\n              <MenuItem key={index} value={value.value}>{value.label}</MenuItem>\r\n            )\r\n          })}\r\n        </MUISelect>\r\n        {props.error && <FormHelperText>{props.error}</FormHelperText>}\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst Textarea = props => {\r\n  return (\r\n    <div className=\"formElement\">\r\n      <FormControl error={!!props.error} className=\"Textarea\" fullWidth>\r\n        <FormLabel component=\"legend\">{props.label}</FormLabel>\r\n        <TextField\r\n          fullWidth\r\n          {...props}\r\n          label={null}\r\n          onChange={event => props.onChange(event.target.value)}\r\n          margin=\"normal\"\r\n          multiline\r\n          rows={5}\r\n          variant=\"outlined\"\r\n        />\r\n        {props.error && <FormHelperText>{props.error}</FormHelperText>}\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Textarea;","import Components from '../MaterialUI';\n\nimport React, { useState, useEffect } from 'react';\n\nconst Dropdown = ({ src, ...props }) => {\n\n  const [values, setValues] = useState([{\n    label: 'Loading...',\n    value: ''\n  }]);\n\n  const [disabled, setDisabled] = useState(true);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src)\n      .then(response => response.json())\n      .then(data => {\n        return setTimeout(() => {\n          setValues([{ label: 'Please select', value: '' }, ...data])\n          setDisabled(false)\n        }, 1000);\n      })\n      .catch(err => console.log(err))\n    }\n  }, [src]);\n  \n  return <Components.Select {...props} placeholder={props.placeholder || 'Please select...'} values={values} className={disabled ? 'disable-select' : null} />;\n}\n\nexport default Dropdown;","import { Repeater } from '@nemosity/react-formulate';\nimport Dropdown from '../components/Dropdown';\n\nimport materailComponentMap from '../components/MaterialUI';\n\nexport default {\n  Repeater,\n  Dropdown,\n  ...materailComponentMap\n}\n","import React, { Component } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { connect } from 'react-redux';\n\nimport { moveBack, submit, updateForm, validateForm, validateElement } from '../actions/formActions';\nimport { DynamicForm } from '@nemosity/react-formulate';\nimport { StatefulDynamicForm } from '@nemosity/react-formulate';\n\nimport Progress from '../components/MaterialUI/Progress';\n\nimport components from '../utils/componentMapMaterialUI';\n\nconst { Button } = components;\n\nclass ReactFormulateForm extends Component {\n\n  renderAlert = () => (\n    <div id=\"successLozenge\" icon=\"icon__attention\" type={this.props.valid ? 'success' : 'warning'} className=\"u-mar-b--3\" inline=\"true\" >\n      <p>{this.props.valid ? 'Valid schema' : 'Enter a valid schema or select a schema to load'}</p>\n    </div>\n  )\n  render() {\n\n    if (!this.props.valid) {\n      return this.renderAlert();\n    }\n\n    if (this.props.schema.config.paginated) {\n      return (\n        <div className=\"form-container\">\n          <Progress steps={this.props.schema.schema.map(page => page.pageId)} activeStep={this.props.step} />\n          <ReactCSSTransitionGroup transitionName=\"background\" transitionEnterTimeout={700} transitionLeaveTimeout={1}>\n            {this.props.schema.schema.map((page, i) => {\n              if (this.props.step === i) {\n                return (\n                  <div className=\"form-slide\">\n                    <DynamicForm\n                      schema={page.content}\n                      data={this.props.form}\n                      onUpdate={this.props.onUpdateForm}\n                      errors={this.props.errors}\n                      onValidateElement={this.props.onValidateElement}\n                      widgets={components}\n                      config={this.props.schema.config || {}}\n                      i18n={(label, params = {}) => {\n                        Object.keys(params).map(key => label = label.replace(`{{${key}}}`, params[key] || ''))\n                        return label\n                      }}\n                    />\n                    <div className=\"buttonGroup\">\n                      <Button tracking=\"eg1\" onClick={() => this.props.onMoveBack()} variant=\"outlined\" disabled={this.props.step - 1 < 0}>\n                        Back\n                      </Button>\n                      <Button name=\"eg2\" onClick={() => this.props.onValidateForm(this.props.step)} primary=\"true\" disabled={this.props.step + 1 > this.props.schema.schema.length - 1}>\n                        Next\n                      </Button>\n                    </div>\n                  </div>\n                )\n              } else {\n                return null;\n              }\n            }\n            )}\n          </ReactCSSTransitionGroup>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"form-container\">\n        <StatefulDynamicForm\n          schema={this.props.schema.schema}\n          data={this.props.form}\n          errors={this.props.errors}\n          onSubmit={this.props.onSubmit}\n          widgets={components}\n          config={this.props.schema.config || {}}\n        />\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = ({ form, schema }) => {\n  return {\n    errors: form.errors,\n    form: form.input,\n    step: form.step,\n    schema: schema.parsedSchema,\n    valid: schema.valid\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onUpdateForm: (path, data) => dispatch(updateForm({ path, data })),\n  onMoveBack: step => dispatch(moveBack(step)),\n  onValidateForm: step => dispatch(validateForm(step)),\n  onValidateElement: (schema, path) => dispatch(validateElement({ schema, path })),\n  onSubmit: (data) => dispatch(submit(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReactFormulateForm);\n","import {createAction} from 'redux-actions';\nimport ActionTypes from '../constants/actionTypes';\n\nexport const updateSchema = createAction(ActionTypes.SCHEMA.UPDATE);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport logo from './logo.svg';\nimport './App.scss';\n\nimport ReactFormulateForm from './containers/ReactFormulateForm';\n\nimport sample1 from './mocks/schemas/sample_1.json';\nimport sample2 from './mocks/schemas/sample_2.json';\nimport { updateSchema } from './actions/schemaActions';\nimport { clearForm } from './actions/formActions';\nimport MaterialUI from './components/MaterialUI';\n\nconst { Button, Textarea } = MaterialUI;\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onSchemaUpdate(JSON.stringify(sample1, null, 4))\n  }\n\n  renderProgressBar() {\n    let parsedSchema;\n    let valid;\n    try {\n      parsedSchema = JSON.parse(this.props.schema);\n      valid = true;\n    }\n    catch (e) {\n      valid = false;\n    }\n    if (valid && parsedSchema.config.paginated) {\n      return (\n        <div className=\"progress rounded-0\">\n          <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${(this.props.form.step + 1) / parsedSchema.schema.length * 100}%` }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <a className=\"navbar-brand\" href=\"http://nemosity.github.io\">\n            <img src={logo} width=\"40\" height=\"40\" className=\"d-inline-block align-top App-logo\" alt=\"logo\" />\n            <span className=\"navbar-brand mb-0 h1\">React Formulate</span>\n          </a>\n          <span className=\"navbar-brand mb-0\">v0.0.2</span>\n        </nav>\n        {this.renderProgressBar()}\n        <div className=\"App\">\n          <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col\">\n                <div>\n                  <h2>{(this.props.valid && this.props.parsedSchema.config.name) || 'Dynamic Form'}</h2>\n                </div>\n                <div className=\"dynamic-form\">\n                  <ReactFormulateForm />\n                </div>\n              </div>\n              <div className=\"col\">\n                <div className=\"content-panel\">\n                  <h2>Schema</h2>\n                  <div className=\"code\">\n                    <Textarea\n                      id=\"textarea\"\n                      rows={8}\n                      onChange={this.props.onSchemaUpdate}\n                      value={this.props.schema}\n                    />\n                  </div>\n                  <div className=\"buttonGroup\">\n                    <Button tracking=\"eg1\" onClick={() => this.props.onSchemaUpdate(JSON.stringify(sample1, null, 4))} primary=\"true\">\n                      ONLINE QUOTE\n                    </Button>\n                    <Button name=\"eg2\" onClick={() => this.props.onSchemaUpdate(JSON.stringify(sample2, null, 4))} primary=\"true\">\n                      ONLINE CLAIM\n                    </Button>\n                  </div>\n                </div>\n                <div className=\"content-panel\">\n                  <div className=\"\">\n                    <h2>Generated Payload</h2>\n                  </div>\n                  <div className=\"code\">\n                    <Textarea\n                      id=\"formoutput\"\n                      rows={8}\n                      value={JSON.stringify(this.props.form.input, null, 4)}\n                      readOnly\n                    />\n                  </div>\n                  <div className=\"buttonGroup\">\n                    <Button tracking=\"clearForm\" onClick={() => this.props.onClearForm()} primary=\"true\">\n                      Reset Form\n                  </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ form, schema }) => ({\n  form,\n  schema: schema.rawSchema,\n  parsedSchema: schema.parsedSchema,\n  valid: schema.valid\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSchemaUpdate: (value) => dispatch(updateSchema(value)),\n  onClearForm: () => dispatch(clearForm()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const getFormInput = state => state.form.input;\nexport const getParsedSchema = state => state.schema.parsedSchema.schema;","import { put, select, takeLatest } from 'redux-saga/effects';\nimport _get from 'lodash/get';\n\nimport ActionTypes from '../constants/actionTypes';\nimport { getFormInput, getParsedSchema } from '../utils/stateSelectors';\nimport { joinPath, validate } from '@nemosity/react-formulate';\n\nfunction* doValidateForm(action) {\n  const input = yield select(getFormInput);\n  const schema = yield select(getParsedSchema);\n\n  if (Number.isInteger(action.payload) && schema[action.payload].pageId) {\n    const page = schema[action.payload].content;\n    const { errors, cleanInput } = validate(page, input);\n\n    if (errors) {\n      yield put({ type: ActionTypes.FORM.VALIDATE_FAIL, payload: errors });\n    } else {\n      yield put({ type: ActionTypes.FORM.CLEAN, payload: cleanInput });\n      yield put({ type: ActionTypes.FORM.MOVE_NEXT, payload: action.payload });\n    }\n  }\n}\n\nexport function* validateForm() {\n  yield takeLatest(ActionTypes.FORM.VALIDATE, doValidateForm);\n}\n\nfunction* doValidateElement(action) {\n  const input = yield select(getFormInput);\n  const {schema, path} = action.payload;\n\n  if (schema.id) {\n    const { errors } = validate(schema, input, path);\n\n    if (errors) {\n      yield put({ type: ActionTypes.FORM.VALIDATE_ELEMENT_FAIL, payload: errors });\n    } else {\n      yield put({ type: ActionTypes.FORM.VALIDATE_ELEMENT_SUCCESS, payload: joinPath(schema.id, path) });\n    }\n  }\n}\n\nexport function* validateElement() {\n  yield takeLatest(ActionTypes.FORM.VALIDATE_ELEMENT, doValidateElement);\n}\n\nfunction* doMoveNext(action) {\n  const input = yield select(getFormInput);\n  const schema = yield select(getParsedSchema);\n  let nextStep = action.payload + 1;\n\n  const shouldSkipStep = step => {\n    const showIf = schema[step].showIf;\n    if (showIf) {\n      if (!(_get(input, showIf.id) === showIf.value)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  while (shouldSkipStep(nextStep)) {\n    nextStep++;\n  }\n\n  yield put({ type: ActionTypes.FORM.UPDATE.STEP, payload: nextStep });\n}\n\nexport function* moveNext() {\n  yield takeLatest(ActionTypes.FORM.MOVE_NEXT, doMoveNext);\n}","import { put, takeLatest } from 'redux-saga/effects';\n\nimport ActionTypes from '../constants/actionTypes';\n\nfunction* doLoadSchema(action) {\n  let parsedSchema;\n  let valid;\n  try {\n    parsedSchema = JSON.parse(action.payload);\n    valid = true;\n  }\n  catch (e) {\n    valid = false;\n  }\n  if (valid) {\n    yield put({ type: ActionTypes.SCHEMA.LOAD, payload: parsedSchema });\n  } else {\n    yield put({ type: ActionTypes.SCHEMA.ERROR });\n  }\n}\n\nexport function* loadSchema() {\n  yield takeLatest(ActionTypes.SCHEMA.UPDATE, doLoadSchema);\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport { validateForm, validateElement, moveNext } from './form';\nimport { loadSchema } from './schema';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(validateForm),\n    fork(validateElement),\n    fork(loadSchema),\n    fork(moveNext)\n  ]);\n}\n","import {\n  set as _setFp,\n  unset as _unsetFp,\n  merge as _mergeFp\n} from 'lodash/fp';\n\nimport ActionTypes from '../constants/actionTypes';\n\nconst initialState = {\n  errors: null,\n  input: {},\n  step: 0,\n  visitedSteps: []\n};\n\nexport default function formReducer (state = initialState, {type, payload}) {\n\n  switch (type) {\n\n    case ActionTypes.FORM.CLEAR:\n    case ActionTypes.SCHEMA.LOAD: {\n      return initialState;\n    }\n\n    case ActionTypes.FORM.UPDATE.INPUT: {\n      return _setFp(`input.${payload.path}`, payload.data, state);\n    }\n\n    case ActionTypes.FORM.CLEAN: {\n      return _setFp(`input`, payload, state);\n    }\n\n    case ActionTypes.FORM.SUBMIT: {\n      return _setFp(`input`, payload, state);\n    }\n\n    case ActionTypes.FORM.UPDATE.STEP: {\n      return {\n        ...state,\n        step: payload,\n        visitedSteps: [...state.visitedSteps, state.step],\n        errors: null\n      }\n    }\n\n    case ActionTypes.FORM.MOVE_BACK: {\n      return {\n        ...state,\n        step: state.visitedSteps[state.visitedSteps.length - 1],\n        visitedSteps: state.visitedSteps.slice(0, state.visitedSteps.length - 1)\n      }\n    }\n\n    case ActionTypes.FORM.VALIDATE_FAIL: {\n      return {\n        ...state,\n        errors: payload\n      }\n    }\n\n    case ActionTypes.FORM.VALIDATE_ELEMENT_FAIL: {\n      return {\n        ...state,\n        errors: _mergeFp(state.errors, payload)\n      }\n    }\n\n    case ActionTypes.FORM.VALIDATE_ELEMENT_SUCCESS: {\n      return _unsetFp(`errors.${payload}`, state);\n    }\n\n    default:\n      return state;\n  }\n\n}\n","import ActionTypes from '../constants/actionTypes';\n\nconst initialState = {\n  rawSchema: '',\n  parsedSchema: null,\n  valid: null\n};\n\n\nexport default function schemaReducer(state = initialState, { type, payload }) {\n\n  switch (type) {\n\n    case ActionTypes.SCHEMA.UPDATE: {\n      return {\n        ...state,\n        rawSchema: payload\n      };\n    }\n\n    case ActionTypes.SCHEMA.LOAD: {\n      return {\n        ...state,\n        parsedSchema: payload,\n        valid: true\n      };\n    }\n\n    case ActionTypes.SCHEMA.ERROR: {\n      return {\n        ...state,\n        valid: false\n      };\n    }\n\n    default:\n      return state;\n  }\n\n}\n","import { combineReducers } from 'redux';\n\nimport form from './formReducer';\nimport schema from './schemaReducer';\nexport default combineReducers({\n  form,\n  schema\n});\n","import {createStore, compose, applyMiddleware} from 'redux';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootSaga from '../sagas';\nimport rootReducer from '../reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nfunction configureStoreProd (initialState) {\n  const middlewares = [\n    sagaMiddleware\n  ];\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n  const store = createStore(rootReducer, initialState, composeEnhancers(\n    applyMiddleware(...middlewares))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n\nfunction configureStoreDev (initialState) {\n  const middlewares = [\n    reduxImmutableStateInvariant(),\n    sagaMiddleware\n  ];\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n  const store = createStore(rootReducer, initialState, composeEnhancers(\n    applyMiddleware(...middlewares)\n  ));\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextReducer = require('../reducers').default; // eslint-disable-line global-require\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}\n\nconst configureStore = process.env.NODE_ENV === 'production' ? configureStoreProd : configureStoreDev;\n\nexport default configureStore;\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './store/configureStore';\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}