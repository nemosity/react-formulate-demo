{"version":3,"sources":["logo.svg","constants/actionTypes.js","actions/formActions.js","components/MaterialUI/Progress.js","components/MaterialUI/Button.js","components/MaterialUI/Datepicker.js","components/MaterialUI/Input.js","components/MaterialUI/Radio.js","components/MaterialUI/index.js","components/MaterialUI/Select.js","components/MaterialUI/Textarea.js","components/Dropdown/index.js","utils/componentMapMaterialUI.js","containers/ReactFormulateForm.js","actions/schemaActions.js","App.js","serviceWorker.js","utils/stateSelectors.js","sagas/form.js","sagas/schema.js","sagas/index.js","reducers/formReducer.js","reducers/schemaReducer.js","reducers/index.js","store/configureStore.js","index.js"],"names":["actionsTypes","SCHEMA","ERROR","LOAD","UPDATE","FORM","CLEAN","CLEAR","MOVE_NEXT","MOVE_BACK","SUBMIT","INPUT","STEP","VALIDATE","VALIDATE_ELEMENT","VALIDATE_ELEMENT_FAIL","VALIDATE_ELEMENT_SUCCESS","VALIDATE_FAIL","clearForm","createAction","ActionTypes","updateForm","moveBack","submit","validateForm","validateElement","useStyles","makeStyles","theme","root","width","backButton","marginRight","spacing","instructions","marginTop","marginBottom","HorizontalLabelPositionBelowStepper","steps","activeStep","classes","className","Stepper","alternativeLabel","map","label","Step","StepLabel","Button","props","variant","color","children","Datepicker","utils","DateFnsUtils","margin","value","now","Date","toISOString","onChange","setDefaultDate","date","Input","FormControl","error","fullWidth","FormLabel","component","TextField","event","target","FormHelperText","Radio","RadioGroup","aria-label","name","id","values","index","FormControlLabel","control","components","Select","input","labelWidth","MenuItem","Textarea","multiline","rows","Dropdown","src","useState","setValues","disabled","setDisabled","useEffect","fetch","then","response","json","data","setTimeout","catch","err","console","log","placeholder","Repeater","materailComponentMap","ReactFormulateForm","renderAlert","icon","type","valid","inline","this","schema","config","paginated","Progress","page","pageId","step","transitionName","transitionEnterTimeout","transitionLeaveTimeout","i","content","form","onUpdate","onUpdateForm","errors","onValidateElement","widgets","i18n","params","Object","keys","key","replace","tracking","onClick","onMoveBack","onValidateForm","primary","length","onSubmit","Component","connect","parsedSchema","dispatch","path","updateSchema","MaterialUI","App","onSchemaUpdate","JSON","stringify","sample1","parse","e","role","style","aria-valuenow","aria-valuemin","aria-valuemax","href","logo","height","alt","renderProgressBar","sample2","readOnly","onClearForm","rawSchema","Boolean","window","location","hostname","match","getFormInput","state","getParsedSchema","doValidateForm","doValidateElement","doMoveNext","moveNext","action","select","Number","isInteger","payload","validate","cleanInput","put","takeLatest","joinPath","nextStep","shouldSkipStep","showIf","_get","doLoadSchema","loadSchema","rootSaga","all","fork","initialState","visitedSteps","combineReducers","_setFp","slice","_mergeFp","_unsetFp","sagaMiddleware","createSagaMiddleware","store","middlewares","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","run","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b44fd592.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","const actionsTypes = {\n  SCHEMA: {\n    ERROR: \"SCHEMA.ERROR\",\n    LOAD: \"SCHEMA.LOAD\",\n    UPDATE: \"SCHEMA.UPDATE\",\n  },\n  FORM: {\n    CLEAN: \"FORM.CLEAN\",\n    CLEAR: \"FORM.CLEAR\",\n    MOVE_NEXT: \"FORM.MOVE_NEXT\",\n    MOVE_BACK: \"FORM.MOVE_BACK\",\n    SUBMIT: \"FORM.SUBMIT\",\n    UPDATE: {\n      INPUT: \"FORM.UPDATE.INPUT\",\n      STEP: \"FORM.UPDATE.STEP\",\n    },\n    VALIDATE: \"FORM.VALIDATE\",\n    VALIDATE_ELEMENT: \"FORM.VALIDATE_ELEMENT\",\n    VALIDATE_ELEMENT_FAIL: \"FORM.VALIDATE_ELEMENT_FAIL\",\n    VALIDATE_ELEMENT_SUCCESS: \"FORM.VALIDATE_ELEMENT_SUCCESS\",\n    VALIDATE_FAIL: \"FORM.VALIDATE_FAIL\",\n  },\n};\n\nexport default actionsTypes;\n","import { createAction } from \"redux-actions\";\nimport ActionTypes from \"../constants/actionTypes\";\n\nexport const clearForm = createAction(ActionTypes.FORM.CLEAR);\nexport const updateForm = createAction(ActionTypes.FORM.UPDATE.INPUT);\nexport const updateStep = createAction(ActionTypes.FORM.UPDATE.STEP);\nexport const moveBack = createAction(ActionTypes.FORM.MOVE_BACK);\nexport const submit = createAction(ActionTypes.FORM.SUBMIT);\nexport const validateForm = createAction(ActionTypes.FORM.VALIDATE);\nexport const validateElement = createAction(ActionTypes.FORM.VALIDATE_ELEMENT);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst HorizontalLabelPositionBelowStepper = ({ steps, activeStep }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n};\n\nexport default HorizontalLabelPositionBelowStepper;\n","import React from \"react\";\n\nimport MUIButton from \"@material-ui/core/Button\";\n\nconst Button = (props) => {\n  return (\n    <span className=\"u-mar--2 u-align-items--center u-justify-content--center\">\n      <MUIButton variant=\"contained\" color=\"secondary\" {...props}>\n        {props.label || props.children}\n      </MUIButton>\n    </span>\n  );\n};\n\nexport default Button;\n","import \"date-fns\";\nimport React from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nconst Datepicker = (props) => {\n  const handleDateChange = (date) => {\n    props.onChange(date);\n  };\n\n  const setDefaultDate = () => {\n    const now = new Date().toISOString();\n    props.onChange(now);\n    return now;\n  };\n\n  return (\n    <div className=\"formElement\">\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          margin=\"normal\"\n          label={props.label}\n          value={props.value || setDefaultDate()}\n          onChange={handleDateChange}\n        />\n      </MuiPickersUtilsProvider>\n    </div>\n  );\n};\n\nexport default Datepicker;\n","import React from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nconst Input = (props) => {\n  return (\n    <div className=\"formElement\">\n      <FormControl error={!!props.error} fullWidth>\n        <FormLabel component=\"legend\">{props.label}</FormLabel>\n        <TextField\n          fullWidth\n          {...props}\n          label={null}\n          onChange={(event) => props.onChange(event.target.value)}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n        {props.error && <FormHelperText>{props.error}</FormHelperText>}\n      </FormControl>\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nimport MUIRadio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nconst Radio = (props) => {\n  return (\n    <div className=\"formElement\">\n      <FormControl error={!!props.error} component=\"fieldset\">\n        <FormLabel component=\"legend\">{props.label}</FormLabel>\n        <RadioGroup\n          {...props}\n          aria-label={props.label}\n          name={props.id}\n          onChange={(event) => props.onChange(event.target.value)}\n        >\n          {props.values.map((value, index) => {\n            return (\n              <FormControlLabel\n                key={index}\n                value={value.value}\n                control={<MUIRadio />}\n                label={value.label}\n              />\n            );\n          })}\n        </RadioGroup>\n        {props.error && <FormHelperText>{props.error}</FormHelperText>}\n      </FormControl>\n    </div>\n  );\n};\n\nexport default Radio;\n","import Button from \"./Button\";\nimport Datepicker from \"./Datepicker\";\nimport Input from \"./Input\";\nimport Radio from \"./Radio\";\nimport Select from \"./Select\";\nimport Textarea from \"./Textarea\";\n\nconst components = {\n  Button,\n  Datepicker,\n  Input,\n  Radio,\n  Select,\n  Textarea,\n};\n\nexport default components;\n","import React from \"react\";\n\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport MUIInput from \"@material-ui/core/Input\";\nimport MUISelect from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst Select = (props) => {\n  return (\n    <div className=\"formElement\">\n      <FormControl error={!!props.error} className=\"selectComponent\" fullWidth>\n        <FormLabel component=\"legend\">{props.label}</FormLabel>\n        <MUISelect\n          fullWidth\n          {...props}\n          label={null}\n          onChange={(event) => props.onChange(event.target.value)}\n          input={<MUIInput name={props.name} id={props.id} labelWidth={120} />}\n        >\n          {props.values.map((value, index) => {\n            return (\n              <MenuItem key={index} value={value.value}>\n                {value.label}\n              </MenuItem>\n            );\n          })}\n        </MUISelect>\n        {props.error && <FormHelperText>{props.error}</FormHelperText>}\n      </FormControl>\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nconst Textarea = (props) => {\n  return (\n    <div className=\"formElement\">\n      <FormControl error={!!props.error} className=\"Textarea\" fullWidth>\n        <FormLabel component=\"legend\">{props.label}</FormLabel>\n        <TextField\n          fullWidth\n          {...props}\n          label={null}\n          onChange={(event) => props.onChange(event.target.value)}\n          margin=\"normal\"\n          multiline\n          rows={5}\n          variant=\"outlined\"\n        />\n        {props.error && <FormHelperText>{props.error}</FormHelperText>}\n      </FormControl>\n    </div>\n  );\n};\n\nexport default Textarea;\n","import Components from \"../MaterialUI\";\n\nimport React, { useState, useEffect } from \"react\";\n\nconst Dropdown = ({ src, ...props }) => {\n  const [values, setValues] = useState([\n    {\n      label: \"Loading...\",\n      value: \"\",\n    },\n  ]);\n\n  const [disabled, setDisabled] = useState(true);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src)\n        .then((response) => response.json())\n        .then((data) => {\n          return setTimeout(() => {\n            setValues([{ label: \"Please select\", value: \"\" }, ...data]);\n            setDisabled(false);\n          }, 1000);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [src]);\n\n  return (\n    <Components.Select\n      {...props}\n      placeholder={props.placeholder || \"Please select...\"}\n      values={values}\n      className={disabled ? \"disable-select\" : null}\n    />\n  );\n};\n\nexport default Dropdown;\n","import { Repeater } from \"@nemosity/react-formulate\";\nimport Dropdown from \"../components/Dropdown\";\n\nimport materailComponentMap from \"../components/MaterialUI\";\n\nconst components = {\n  Repeater,\n  Dropdown,\n  ...materailComponentMap,\n};\n\nexport default components;\n","import React, { Component } from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport { connect } from \"react-redux\";\n\nimport {\n  moveBack,\n  submit,\n  updateForm,\n  validateForm,\n  validateElement,\n} from \"../actions/formActions\";\nimport { DynamicForm } from \"@nemosity/react-formulate\";\nimport { StatefulDynamicForm } from \"@nemosity/react-formulate\";\n\nimport Progress from \"../components/MaterialUI/Progress\";\n\nimport components from \"../utils/componentMapMaterialUI\";\n\nconst { Button } = components;\n\nclass ReactFormulateForm extends Component {\n  renderAlert = () => (\n    <div\n      id=\"successLozenge\"\n      icon=\"icon__attention\"\n      type={this.props.valid ? \"success\" : \"warning\"}\n      className=\"u-mar-b--3\"\n      inline=\"true\"\n    >\n      <p>\n        {this.props.valid\n          ? \"Valid schema\"\n          : \"Enter a valid schema or select a schema to load\"}\n      </p>\n    </div>\n  );\n  render() {\n    if (!this.props.valid) {\n      return this.renderAlert();\n    }\n\n    if (this.props.schema.config.paginated) {\n      return (\n        <div className=\"form-container\">\n          <Progress\n            steps={this.props.schema.schema.map((page) => page.pageId)}\n            activeStep={this.props.step}\n          />\n          <ReactCSSTransitionGroup\n            transitionName=\"background\"\n            transitionEnterTimeout={700}\n            transitionLeaveTimeout={1}\n          >\n            {this.props.schema.schema.map((page, i) => {\n              if (this.props.step === i) {\n                return (\n                  <div className=\"form-slide\">\n                    <DynamicForm\n                      schema={page.content}\n                      data={this.props.form}\n                      onUpdate={this.props.onUpdateForm}\n                      errors={this.props.errors}\n                      onValidateElement={this.props.onValidateElement}\n                      widgets={components}\n                      config={this.props.schema.config || {}}\n                      i18n={(label, params = {}) => {\n                        Object.keys(params).map(\n                          (key) =>\n                            (label = label.replace(\n                              `{{${key}}}`,\n                              params[key] || \"\"\n                            ))\n                        );\n                        return label;\n                      }}\n                    />\n                    <div className=\"buttonGroup\">\n                      <Button\n                        tracking=\"eg1\"\n                        onClick={() => this.props.onMoveBack()}\n                        variant=\"outlined\"\n                        disabled={this.props.step - 1 < 0}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        name=\"eg2\"\n                        onClick={() =>\n                          this.props.onValidateForm(this.props.step)\n                        }\n                        primary=\"true\"\n                        disabled={\n                          this.props.step + 1 >\n                          this.props.schema.schema.length - 1\n                        }\n                      >\n                        Next\n                      </Button>\n                    </div>\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            })}\n          </ReactCSSTransitionGroup>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"form-container\">\n        <StatefulDynamicForm\n          schema={this.props.schema.schema}\n          data={this.props.form}\n          errors={this.props.errors}\n          onSubmit={this.props.onSubmit}\n          widgets={components}\n          config={this.props.schema.config || {}}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ form, schema }) => {\n  return {\n    errors: form.errors,\n    form: form.input,\n    step: form.step,\n    schema: schema.parsedSchema,\n    valid: schema.valid,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUpdateForm: (path, data) => dispatch(updateForm({ path, data })),\n  onMoveBack: (step) => dispatch(moveBack(step)),\n  onValidateForm: (step) => dispatch(validateForm(step)),\n  onValidateElement: (schema, path) =>\n    dispatch(validateElement({ schema, path })),\n  onSubmit: (data) => dispatch(submit(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReactFormulateForm);\n","import { createAction } from \"redux-actions\";\nimport ActionTypes from \"../constants/actionTypes\";\n\nexport const updateSchema = createAction(ActionTypes.SCHEMA.UPDATE);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\n\nimport ReactFormulateForm from \"./containers/ReactFormulateForm\";\n\nimport sample1 from \"./mocks/schemas/sample_1.json\";\nimport sample2 from \"./mocks/schemas/sample_2.json\";\nimport { updateSchema } from \"./actions/schemaActions\";\nimport { clearForm } from \"./actions/formActions\";\nimport MaterialUI from \"./components/MaterialUI\";\n\nconst { Button, Textarea } = MaterialUI;\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onSchemaUpdate(JSON.stringify(sample1, null, 4));\n  }\n\n  renderProgressBar() {\n    let parsedSchema;\n    let valid;\n    try {\n      parsedSchema = JSON.parse(this.props.schema);\n      valid = true;\n    } catch (e) {\n      valid = false;\n    }\n    if (valid && parsedSchema.config.paginated) {\n      return (\n        <div className=\"progress rounded-0\">\n          <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            style={{\n              width: `${\n                ((this.props.form.step + 1) / parsedSchema.schema.length) * 100\n              }%`,\n            }}\n            aria-valuenow=\"25\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n          ></div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <a className=\"navbar-brand\" href=\"http://nemosity.github.io\">\n            <img\n              src={logo}\n              width=\"40\"\n              height=\"40\"\n              className=\"d-inline-block align-top App-logo\"\n              alt=\"logo\"\n            />\n            <span className=\"navbar-brand mb-0 h1\">React Formulate</span>\n          </a>\n          <span className=\"navbar-brand mb-0\">v0.1.1</span>\n        </nav>\n        {this.renderProgressBar()}\n        <div className=\"App\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <div>\n                  <h2>\n                    {(this.props.valid &&\n                      this.props.parsedSchema.config.name) ||\n                      \"Dynamic Form\"}\n                  </h2>\n                </div>\n                <div className=\"dynamic-form\">\n                  <ReactFormulateForm />\n                </div>\n              </div>\n              <div className=\"col\">\n                <div className=\"content-panel\">\n                  <h2>Schema</h2>\n                  <div className=\"code\">\n                    <Textarea\n                      id=\"textarea\"\n                      rows={8}\n                      onChange={this.props.onSchemaUpdate}\n                      value={this.props.schema}\n                    />\n                  </div>\n                  <div className=\"buttonGroup\">\n                    <Button\n                      tracking=\"eg1\"\n                      onClick={() =>\n                        this.props.onSchemaUpdate(\n                          JSON.stringify(sample1, null, 4)\n                        )\n                      }\n                      primary=\"true\"\n                    >\n                      ONLINE QUOTE\n                    </Button>\n                    <Button\n                      name=\"eg2\"\n                      onClick={() =>\n                        this.props.onSchemaUpdate(\n                          JSON.stringify(sample2, null, 4)\n                        )\n                      }\n                      primary=\"true\"\n                    >\n                      ONLINE CLAIM\n                    </Button>\n                  </div>\n                </div>\n                <div className=\"content-panel\">\n                  <div className=\"\">\n                    <h2>Generated Payload</h2>\n                  </div>\n                  <div className=\"code\">\n                    <Textarea\n                      id=\"formoutput\"\n                      rows={8}\n                      value={JSON.stringify(this.props.form.input, null, 4)}\n                      readOnly\n                    />\n                  </div>\n                  <div className=\"buttonGroup\">\n                    <Button\n                      tracking=\"clearForm\"\n                      onClick={() => this.props.onClearForm()}\n                      primary=\"true\"\n                    >\n                      Reset Form\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ form, schema }) => ({\n  form,\n  schema: schema.rawSchema,\n  parsedSchema: schema.parsedSchema,\n  valid: schema.valid,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSchemaUpdate: (value) => dispatch(updateSchema(value)),\n  onClearForm: () => dispatch(clearForm()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export const getFormInput = (state) => state.form.input;\nexport const getParsedSchema = (state) => state.schema.parsedSchema.schema;\n","import { put, select, takeLatest } from \"redux-saga/effects\";\nimport _get from \"lodash/get\";\n\nimport ActionTypes from \"../constants/actionTypes\";\nimport { getFormInput, getParsedSchema } from \"../utils/stateSelectors\";\nimport { joinPath, validate } from \"@nemosity/react-formulate\";\n\nfunction* doValidateForm(action) {\n  const input = yield select(getFormInput);\n  const schema = yield select(getParsedSchema);\n\n  if (Number.isInteger(action.payload) && schema[action.payload].pageId) {\n    const page = schema[action.payload].content;\n    const { errors, cleanInput } = validate(page, input);\n\n    if (errors) {\n      yield put({ type: ActionTypes.FORM.VALIDATE_FAIL, payload: errors });\n    } else {\n      yield put({ type: ActionTypes.FORM.CLEAN, payload: cleanInput });\n      yield put({ type: ActionTypes.FORM.MOVE_NEXT, payload: action.payload });\n    }\n  }\n}\n\nexport function* validateForm() {\n  yield takeLatest(ActionTypes.FORM.VALIDATE, doValidateForm);\n}\n\nfunction* doValidateElement(action) {\n  const input = yield select(getFormInput);\n  const { schema, path } = action.payload;\n\n  if (schema.id) {\n    const { errors } = validate(schema, input, path);\n\n    if (errors) {\n      yield put({\n        type: ActionTypes.FORM.VALIDATE_ELEMENT_FAIL,\n        payload: errors,\n      });\n    } else {\n      yield put({\n        type: ActionTypes.FORM.VALIDATE_ELEMENT_SUCCESS,\n        payload: joinPath(schema.id, path),\n      });\n    }\n  }\n}\n\nexport function* validateElement() {\n  yield takeLatest(ActionTypes.FORM.VALIDATE_ELEMENT, doValidateElement);\n}\n\nfunction* doMoveNext(action) {\n  const input = yield select(getFormInput);\n  const schema = yield select(getParsedSchema);\n  let nextStep = action.payload + 1;\n\n  const shouldSkipStep = (step) => {\n    const showIf = schema[step].showIf;\n    if (showIf) {\n      if (!(_get(input, showIf.id) === showIf.value)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  while (shouldSkipStep(nextStep)) {\n    nextStep++;\n  }\n\n  yield put({ type: ActionTypes.FORM.UPDATE.STEP, payload: nextStep });\n}\n\nexport function* moveNext() {\n  yield takeLatest(ActionTypes.FORM.MOVE_NEXT, doMoveNext);\n}\n","import { put, takeLatest } from \"redux-saga/effects\";\n\nimport ActionTypes from \"../constants/actionTypes\";\n\nfunction* doLoadSchema(action) {\n  let parsedSchema;\n  let valid;\n  try {\n    parsedSchema = JSON.parse(action.payload);\n    valid = true;\n  } catch (e) {\n    valid = false;\n  }\n  if (valid) {\n    yield put({ type: ActionTypes.SCHEMA.LOAD, payload: parsedSchema });\n  } else {\n    yield put({ type: ActionTypes.SCHEMA.ERROR });\n  }\n}\n\nexport function* loadSchema() {\n  yield takeLatest(ActionTypes.SCHEMA.UPDATE, doLoadSchema);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport { validateForm, validateElement, moveNext } from \"./form\";\nimport { loadSchema } from \"./schema\";\n\nexport default function* rootSaga() {\n  yield all([\n    fork(validateForm),\n    fork(validateElement),\n    fork(loadSchema),\n    fork(moveNext),\n  ]);\n}\n","import { set as _setFp, unset as _unsetFp, merge as _mergeFp } from \"lodash/fp\";\n\nimport ActionTypes from \"../constants/actionTypes\";\n\nconst initialState = {\n  errors: null,\n  input: {},\n  step: 0,\n  visitedSteps: [],\n};\n\nexport default function formReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case ActionTypes.FORM.CLEAR:\n    case ActionTypes.SCHEMA.LOAD: {\n      return initialState;\n    }\n\n    case ActionTypes.FORM.UPDATE.INPUT: {\n      return _setFp(`input.${payload.path}`, payload.data, state);\n    }\n\n    case ActionTypes.FORM.CLEAN: {\n      return _setFp(`input`, payload, state);\n    }\n\n    case ActionTypes.FORM.SUBMIT: {\n      return _setFp(`input`, payload, state);\n    }\n\n    case ActionTypes.FORM.UPDATE.STEP: {\n      return {\n        ...state,\n        step: payload,\n        visitedSteps: [...state.visitedSteps, state.step],\n        errors: null,\n      };\n    }\n\n    case ActionTypes.FORM.MOVE_BACK: {\n      return {\n        ...state,\n        step: state.visitedSteps[state.visitedSteps.length - 1],\n        visitedSteps: state.visitedSteps.slice(\n          0,\n          state.visitedSteps.length - 1\n        ),\n      };\n    }\n\n    case ActionTypes.FORM.VALIDATE_FAIL: {\n      return {\n        ...state,\n        errors: payload,\n      };\n    }\n\n    case ActionTypes.FORM.VALIDATE_ELEMENT_FAIL: {\n      return {\n        ...state,\n        errors: _mergeFp(state.errors, payload),\n      };\n    }\n\n    case ActionTypes.FORM.VALIDATE_ELEMENT_SUCCESS: {\n      return _unsetFp(`errors.${payload}`, state);\n    }\n\n    default:\n      return state;\n  }\n}\n","import ActionTypes from \"../constants/actionTypes\";\n\nconst initialState = {\n  rawSchema: \"\",\n  parsedSchema: null,\n  valid: null,\n};\n\nexport default function schemaReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case ActionTypes.SCHEMA.UPDATE: {\n      return {\n        ...state,\n        rawSchema: payload,\n      };\n    }\n\n    case ActionTypes.SCHEMA.LOAD: {\n      return {\n        ...state,\n        parsedSchema: payload,\n        valid: true,\n      };\n    }\n\n    case ActionTypes.SCHEMA.ERROR: {\n      return {\n        ...state,\n        valid: false,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport form from \"./formReducer\";\nimport schema from \"./schemaReducer\";\nexport default combineReducers({\n  form,\n  schema,\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from \"../sagas\";\nimport rootReducer from \"../reducers\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nfunction configureStoreProd(initialState) {\n  const middlewares = [sagaMiddleware];\n\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n\nfunction configureStoreDev(initialState) {\n  const middlewares = [reduxImmutableStateInvariant(), sagaMiddleware];\n\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"../reducers\", () => {\n      const nextReducer = require(\"../reducers\").default; // eslint-disable-line global-require\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}\n\nconst configureStore =\n  process.env.NODE_ENV === \"production\"\n    ? configureStoreProd\n    : configureStoreDev;\n\nexport default configureStore;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport configureStore from \"./store/configureStore\";\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}